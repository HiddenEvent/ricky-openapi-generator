package {{basePackage}}.spec.sample

import com.fasterxml.jackson.databind.ObjectMapper
import me.ricky.spec.domain.{{#lambda.pascalcase}}{{name}}{{/lambda.pascalcase}}
import me.ricky.spec.sample.base.DomainSample
import java.util.*

object {{classname}}Sample : DomainSample<{{classname}}>() {

    override fun new(): {{classname}} = {{classname}}(
{{#Vars}}{{^vendorExtensions.x-custom-properties.isInherit}}{{^isModel}}{{^isContainer}}{{>dataClassReqSampleArg}}{{/isContainer}}{{/isModel}}{{/vendorExtensions.x-custom-properties.isInherit}}{{/Vars}}{{!
}}    )

    override fun newList(size: Int): List<{{classname}}> {
        val results = MutableList(size - 1) {
            {{classname}}(
{{#Vars}}{{^vendorExtensions.x-custom-properties.isInherit}}{{^isModel}}{{^isContainer}}{{>dataClassReqSampleListArg}}{{/isContainer}}{{/isModel}}{{/vendorExtensions.x-custom-properties.isInherit}}{{/Vars}}{{!
}}            )
        }
        results.add(0, new())
        return results
    }

    /* 단건 sampleData 생성 */
    override fun sample(): {{classname}} = new()
        .apply {
            this.setSampleData()
{{#Vars}}{{^vendorExtensions.x-custom-properties.isInherit}}{{#isContainer}}{{!
}}            this.{{name}} = createMapping{{#lambda.pascalcase}}{{name}}{{/lambda.pascalcase}}(this.id, 3)
{{/isContainer}}{{/vendorExtensions.x-custom-properties.isInherit}}{{/Vars}}{{!
}}        }

    /* 리스트 sampleData 생성 */
    override fun sampleList(size: Int): List<{{classname}}> {
        val results = newList(size)
            .map {
                it.apply {
                    this.setSampleData()
{{#Vars}}{{^vendorExtensions.x-custom-properties.isInherit}}{{#isContainer}}{{!
}}                    this.{{name}} = createMapping{{#lambda.pascalcase}}{{name}}{{/lambda.pascalcase}}(this.id, 3)
{{/isContainer}}{{/vendorExtensions.x-custom-properties.isInherit}}{{/Vars}}{{!
}}                }
            }
            .toMutableList()

        results.add(0, sample())
        return results
    }
{{#Vars}}{{^vendorExtensions.x-custom-properties.isInherit}}{{#isContainer}}
    /* {{name}} 매핑  */
    fun createMapping{{#lambda.pascalcase}}{{name}}{{/lambda.pascalcase}}(id: UUID, size: Int): MutableList<{{complexType}}> {
        return {{complexType}}Sample.newList(size)
            .onEach { it.{{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}Id = id }
            .toMutableList()
    }
{{/isContainer}}{{/vendorExtensions.x-custom-properties.isInherit}}{{/Vars}}
}

//  main 함수는 테스트 용으로 객체를 생성 후 출력해 보기 위한 용도로 사용됨
fun main() {
    val mapper = ObjectMapper()
    val sample{{classname}} = mapper.writeValueAsString({{classname}}Sample.sample())
    val sample{{classname}}List = mapper.writeValueAsString({{classname}}Sample.sampleList())
    println(sample{{classname}})
    println(sample{{classname}}List)
}